qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0.25,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.exgauss@AIC
AIC <- stepAIC.ghyp(rt, dist = c("NIG"),
symmetric = FALSE,
control = list(maxit = 1000), silent = TRUE)
AIC$fit.table
fit.recinormal$aic
plot(fit.weibull)
plot(fit.gamma)
plot(fit.recinormal)
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.exgauss@AIC
AIC <- stepAIC.ghyp(rt, dist = c("NIG"),
symmetric = FALSE,
control = list(maxit = 1000), silent = TRUE)
AIC$fit.table
fit.recinormal$aic
plot(fit.weibull)
plot(fit.gamma)
plot(fit.recinormal)
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0.0,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.exgauss@AIC
AIC <- stepAIC.ghyp(rt, dist = c("NIG"),
symmetric = FALSE,
control = list(maxit = 1000), silent = TRUE)
AIC$fit.table
fit.recinormal$aic
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
fit.invgauss <-  fitdist(rt, "dinvgauss")
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
fit.invgauss <-  fitdist(rt, "NIG")
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
fit.invgauss <-  fitdist(rt, "nig")
library(yaml)
library(feather)
library(lme4)
library(lmerTest)
library(simr)
library(car)
library(fitdistrplus)
library(MASS)
library(here)
library(GeneralizedHyperbolic)
library(retimes)
library(ghyp)
# Read the configuration file
config <- yaml.load_file("../config.yml")
# Read the R dataframe
r_dataframe_path <- here(config$r_dataframe)
df <- read_feather(r_dataframe_path)
df <- na.omit(df)
# Convert to factor
factors <- c("task_stage", "fixation_rate", "transition_ratio", "glance_ratio", "pupil_size", "mental_workload", "avg_mental_workload", "high_engagement", "low_engagement", "distraction", "subject", "performance_level")
df[factors] <- lapply(df[factors], as.factor)
df
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
fit.invgauss <-  fitdist(rt, "nig")
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
fit.invgauss <-  fitdist(rt, "nig", start=list(mu = 0, delta = 1, alpha = 1, beta = 0))
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
myoptim <- function(fn, par, ui, ci, ...)
{
res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
}
x <- rnig(1000, 3, 1/2, 1/2, 1/4)
ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
ci <- c(0,0,0,0)
fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci, start=list(mu = 0, delta = 1, alpha = 1, beta = 0))
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0.0,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.exgauss@AIC
AIC <- stepAIC.ghyp(rt, dist = c("NIG"),
symmetric = FALSE,
control = list(maxit = 1000), silent = TRUE)
AIC$fit.table
fit.recinormal$aic
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
myoptim <- function(fn, par, ui, ci, ...)
{
res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
}
x <- rnig(1000, 3, 1/2, 1/2, 1/4)
ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
ci <- c(0,0,0,0)
fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci, start=list(mu = 0, delta = 1, alpha = 1, beta = 0))
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0.0,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.exgauss@AIC
AIC <- stepAIC.ghyp(rt, dist = c("NIG"),
symmetric = FALSE,
control = list(maxit = 1000), silent = TRUE)
AIC$fit.table
fit.
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
myoptim <- function(fn, par, ui, ci, ...)
{
res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
}
x <- rnig(1000, 3, 1/2, 1/2, 1/4)
ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
ci <- c(0,0,0,0)
fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci, start=list(mu = 0, delta = 1, alpha = 1, beta = 0))
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0.0,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.exgauss@AIC
AIC <- stepAIC.ghyp(rt, dist = c("NIG"),
symmetric = FALSE,
control = list(maxit = 1000), silent = TRUE)
AIC$fit.table
fit.invgauss$aic
fit.recinormal$aic
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
myoptim <- function(fn, par, ui, ci, ...)
{
res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
}
x <- rnig(1000, 3, 1/2, 1/2, 1/4)
ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
ci <- c(0,0,0,0)
fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci, start=list(mu = 0, delta = 1, alpha = 1, beta = 0))
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0.0,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.invgauss$aic
fit.recinormal$aic
fit.exgauss@AIC
AIC <- stepAIC.ghyp(rt, dist = c("NIG"),
symmetric = FALSE,
control = list(maxit = 1000), silent = TRUE)
AIC$fit.table
fit.invgauss$aic
fit.recinormal$aic
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
myoptim <- function(fn, par, ui, ci, ...)
{
res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
}
x <- rnig(1000, 3, 1/2, 1/2, 1/4)
ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
ci <- c(0,0,0,0)
fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci, start=list(mu = 0, delta = 1, alpha = 1, beta = 0))
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0.0,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.invgauss$aic
fit.recinormal$aic
fit.exgauss@AIC
fit.invgauss$aic
fit.recinormal$aic
rt <- df$reaction_time
plotdist(rt, histo = TRUE, demp = TRUE)
# Distribution analysis
qqp(rt, "lnorm")
qqp(rt, "norm")
beta <- fitdistr(rt, "beta", start=list(shape1=0.5, shape2=0.5))
qqp(rt, "beta", shape1 = beta$estimate[[1]], shape2 = beta$estimate[[2]])
gamma <- fitdistr(rt, "gamma")
qqp(rt, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
# Cullen and Frey graph
descdist(rt, discrete = FALSE, boot = 1000)
# Fit different distributions
fit.weibull <- fitdist(rt, "weibull")
fit.norm <- fitdist(rt, "norm")
fit.gamma <- fitdist(rt, "gamma")
fit.lnorm <- fitdist(rt, "lnorm")
myoptim <- function(fn, par, ui, ci, ...)
{
res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
}
x <- rnig(1000, 3, 1/2, 1/2, 1/4)
ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
ci <- c(0,0,0,0)
fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci, start=list(mu = 0, delta = 1, alpha = 1, beta = 0))
fit.exgauss <-  timefit(rt)
# Custom reci-normal distribution fit
drecinormal <-  function(t, u, s){
ifelse(t==0.0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)))
}
precinormal <- function(t, u, s){
integrate(pdf_recinormal, 0, t, u, s, abs.tol=1E-3)$value
}
qrecinormal <-  function(q, u, s){
uniroot(function(x){cdf_recinormal(x, u, s) - q}, c(-1, 1))$root
}
fit.recinormal <- fitdist(rt,"recinormal", start=list(u=0.0,s=1.0))
# AIC varification
fit.weibull$aic
fit.norm$aic
fit.gamma$aic
fit.lnorm$aic
fit.invgauss$aic
fit.recinormal$aic
fit.exgauss@AIC
