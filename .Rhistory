out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(.t, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*t^3))*exp(-l*(t-u)^2/(2*u^2*t)));
}
pinvgauss <- function(t, u, l){
integrate(dinvgauss, 0, t, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(t, u, l, q){
uniroot(function(x){pinvgauss(t, u, l) - q}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(t, u, s){
ifelse(t==0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)));
}
precinorm <- function(t, u, s){
integrate(drecinorm, 0, t, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(t, u, s, .q){
uniroot(function(x){precinorm(t, u, s) - q}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
aggregate(df[, 6], list(df$task_stage), mean)
processed <- out[out[,5]<0, ]
colMeans(processed)
processed <- out[out[,5]<0, ]
colMeans(processed)
processed <- out[out[,5]<0, ]
colMeans(processed)
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(.t, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*t^3))*exp(-l*(t-u)^2/(2*u^2*t)));
}
pinvgauss <- function(t, u, l){
integrate(dinvgauss, 0, t, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(q, t, u, l){
uniroot(function(x){pinvgauss(t, u, l) - q}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(t, u, s){
ifelse(t==0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)));
}
precinorm <- function(t, u, s){
integrate(drecinorm, 0, t, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(q, t, u, s){
uniroot(function(x){precinorm(t, u, s) - q}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(x, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*x^3))*exp(-l*(x-u)^2/(2*u^2*x)));
}
pinvgauss <- function(x, u, l){
integrate(dinvgauss, 0, x, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(q, x, u, l){
uniroot(function(x){pinvgauss(x, u, l) - q}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(t, u, s){
ifelse(t==0, 0.0, 1/(t^2*s*sqrt(2*pi))*exp(-(u*t-1)^2/(2*t^2*s^2)));
}
precinorm <- function(t, u, s){
integrate(drecinorm, 0, t, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(q, t, u, s){
uniroot(function(x){precinorm(t, u, s) - q}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(x, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*x^3))*exp(-l*(x-u)^2/(2*u^2*x)));
}
pinvgauss <- function(x, u, l){
integrate(dinvgauss, 0, x, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(q, x, u, l){
uniroot(function(x){pinvgauss(x, u, l) - q}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(x, u, s){
ifelse(t==0, 0.0, 1/(x^2*s*sqrt(2*pi))*exp(-(u*x-1)^2/(2*x^2*s^2)));
}
precinorm <- function(x, u, s){
integrate(drecinorm, 0, x, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(q, x, u, s){
uniroot(function(x){precinorm(x, u, s) - q}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(.x, .u, .l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*x^3))*exp(-l*(x-u)^2/(2*u^2*x)));
}
pinvgauss <- function(x, u, l){
integrate(dinvgauss, 0, x, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(q, x, u, l){
uniroot(function(x){pinvgauss(x, u, l) - q}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(x, u, s){
ifelse(t==0, 0.0, 1/(x^2*s*sqrt(2*pi))*exp(-(u*x-1)^2/(2*x^2*s^2)));
}
precinorm <- function(x, u, s){
integrate(drecinorm, 0, x, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(q, x, u, s){
uniroot(function(x){precinorm(x, u, s) - q}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(x, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*x^3))*exp(-l*(x-u)^2/(2*u^2*x)));
}
pinvgauss <- function(q, u, l){
integrate(dinvgauss, 0, q, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(p, x, u, l){
uniroot(function(x){pinvgauss(x, u, l) - p}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(x, u, s){
ifelse(t==0, 0.0, 1/(x^2*s*sqrt(2*pi))*exp(-(u*x-1)^2/(2*x^2*s^2)));
}
precinorm <- function(q, u, s){
integrate(drecinorm, 0, q, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(p, x, u, s){
uniroot(function(x){precinorm(x, u, s) - p}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(x, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*x^3))*exp(-l*(x-u)^2/(2*u^2*x)));
}
pinvgauss <- function(q, u, l){
integrate(dinvgauss, 0, q, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(p, x, u, l){
uniroot(function(x){pinvgauss(x, u, l) - p}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(x, u, s){
ifelse(t==0, 0.0, 1/(x^2*s*sqrt(2*pi))*exp(-(u*x-1)^2/(2*x^2*s^2)));
}
precinorm <- function(q, u, s){
integrate(drecinorm, 0, q, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(p, x, u, s){
uniroot(function(x){precinorm(x, u, s) - p}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(x, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*x^3))*exp(-l*(x-u)^2/(2*u^2*x)));
}
pinvgauss <- function(q, u, l){
integrate(dinvgauss, 0, q, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(p, u, l){
uniroot(function(x){pinvgauss(x, u, l) - p}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(x, u, s){
ifelse(t==0, 0.0, 1/(x^2*s*sqrt(2*pi))*exp(-(u*x-1)^2/(2*x^2*s^2)));
}
precinorm <- function(q, u, s){
integrate(drecinorm, 0, q, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(p, x, u, s){
uniroot(function(x){precinorm(x, u, s) - p}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(x, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*x^3))*exp(-l*(x-u)^2/(2*u^2*x)));
}
pinvgauss <- function(q, u, l){
integrate(dinvgauss, 0, q, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(p, u, l){
uniroot(function(x){pinvgauss(x, u, l) - p}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(x, u, s){
ifelse(t==0, 0.0, 1/(x^2*s*sqrt(2*pi))*exp(-(u*x-1)^2/(2*x^2*s^2)));
}
precinorm <- function(q, u, s){
integrate(drecinorm, 0, q, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(p, u, s){
uniroot(function(x){precinorm(x, u, s) - p}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
options(warn=-1)
subjects <-  unique(df$subject)
aic.output <- function(df){
rt <- df$reaction_time
# Fit different distributions
fit.normal <- fitdist(rt, "norm");
fit.weibull <- fitdist(rt, "weibull");
fit.gamma <- fitdist(rt, "gamma");
# myoptim <- function(fn, par, ui, ci, ...)
# {
#   res <- constrOptim(f=fn, theta=par, method="Nelder-Mead", ui=ui, ci=ci, ...)
#   c(res, convergence=res$convergence, value=res$objective, par=res$minimum, hessian=res$hessian)
# }
# x <- rnig(1000, 3, 1/2, 1/2, 1/4)
# ui <- rbind(c(0,1,0,0), c(0,0,1,0), c(0,0,1,-1), c(0,0,1,1))
# ci <- c(0,0,0,0)
#
# fit.invgauss <- fitdist(rt, "nig", custom.optim=myoptim, ui=ui, ci=ci,
#                         start=list(mu = 0.1, delta = 1, alpha = 1, beta = 0));
# Custom reci-normal distribution fit
dinvgauss <- function(x, u, l){
ifelse(t==0, 0.0, sqrt(l/(2*pi*x^3))*exp(-l*(x-u)^2/(2*u^2*x)));
}
pinvgauss <- function(q, u, l){
integrate(dinvgauss, 0, q, u, l, abs.tol=1E-5)$value;
}
qinvgauss <-  function(p, u, l){
uniroot(function(x){pinvgauss(x, u, l) - p}, c(0, 5))$root;
}
fit.invgauss <- fitdist(rt,"invgauss", start=list(u=0.5,l=1.5));
# Custom reci-normal distribution fit
drecinorm <- function(x, u, s){
ifelse(t==0, 0.0, 1/(x^2*s*sqrt(2*pi))*exp(-(u*x-1)^2/(2*x^2*s^2)));
}
precinorm <- function(q, u, s){
integrate(drecinorm, 0, q, u, s, abs.tol=1E-5)$value;
}
qrecinorm <-  function(p, u, s){
uniroot(function(x){precinorm(x, u, s) - p}, c(0, 5))$root;
}
fit.recinorm <- fitdist(rt,"recinorm", start=list(u=0.5,s=1.5));
output <-  c(fit.normal$aic, fit.weibull$aic, fit.gamma$aic, fit.invgauss$aic, fit.recinorm$aic)
return(output)
}
out <-  c()
for (subject in subjects){
df_temp <-  df[df$subject==subject, ]
out <- rbind(out, aic.output(df_temp));
}
processed <- out[out[,5]<0, ]
colMeans(processed)
processed <- out[out[,5]<0, ]
colMeans(processed)
processed <- out[out[,5]<0, ]
colMeans(processed)
processed <- out[out[,5]<0, ]
colMeans(processed)
aggregate(df[, 6], list(df$task_stage), mean)
processed <- out[out[,5]<0, ]
colMeans(processed)
model3 <- lmer(rt ~ 1 + (1 | subject), data = df)
summary(model3)
